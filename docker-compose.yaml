services:
  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./hosts:/etc/nginx/conf.d
      - ./www:/var/www
      - ./logs:/var/log/nginx
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    networks:
      - test

  php:
    build: php
    container_name: php
    volumes:
      - ./php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./www:/var/www
    networks:
      - test

  node:
    build: node
    container_name: node
    ports:
      - "8080:8080"
      - "6001:6001"
      - "8000:8000"
      - "3000:3000"
    stdin_open: true
    tty: true
    volumes:
      - ./www:/var/www
    networks:
      - test

  #  mysql:
  #    image: mysql
  #    command: --default-authentication-plugin=mysql_native_password
  #    container_name: mysql
  #    environment:
  #      MYSQL_ROOT_PASSWORD: root
  #      MYSQL_DATABASE: mysql
  #    ports:
  #      - "3308:3306"
  #    volumes:
  #      - ./db/initdb/:/docker-entrypoint-initdb.d/
  #      - ./db/mysql:/var/lib/mysql
  #      - ./db/dumps:/dumps
  #      - ./logs:/var/log/mysql/
  #    networks:
  #      - test

  mariadb:
    image: mariadb
    command: --default-authentication-plugin=mysql_native_password
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mariadb
    ports:
      - "3307:3306"
    volumes:
      - ./db/initdb/:/docker-entrypoint-initdb.d/
      - ./db/mysql:/var/lib/mysql
      - ./db/dumps:/dumps
      - ./logs:/var/log/mysql/
    networks:
      - test

#  postgres:
#    image: postgres
#    container_name: postgres
#    environment:
#      POSTGRES_DB: postgres
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#    volumes:
#      - ./db/postregs:/var/lib/postgresql
#      - ./db/dumps:/dumps
#      - ./logs:/var/log/postgresql/
#    ports:
#      - "5433:5432"
#    networks:
#      - test

  redis:
    image: redis
    container_name: redis
    ports:
      - "6380:6379"
    command: ["sh", "-c", "exec redis-server --requirepass \"redis\""]
    networks:
      - test

  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:v1.10
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=masterKey
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
    ports:
      - "7777:7700"
    networks:
      - test

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - test

#  rabbitMq:
#    3.12.1

volumes:
  db:

networks:
  test:
    driver: bridge